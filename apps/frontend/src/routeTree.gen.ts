/* eslint-disable */

// @ts-nocheck

// noinspection JSUnusedGlobalSymbols

// This file was automatically generated by TanStack Router.
// You should NOT make any changes in this file as it will be overwritten.
// Additionally, you should also exclude this file from your linter and/or formatter to prevent it from being checked or modified.

// Import Routes

import {Route as rootRoute} from "./routes/__root"
import {Route as IndexImport} from "./routes/index"
import {Route as StoryStoryIDImport} from "./routes/story.$storyID"

// Create/Update Routes

const IndexRoute = IndexImport.update({
    id: "/",
    path: "/",
    getParentRoute: () => rootRoute
} as any)

const StoryStoryIDRoute = StoryStoryIDImport.update({
    id: "/story/$storyID",
    path: "/story/$storyID",
    getParentRoute: () => rootRoute
} as any)

// Populate the FileRoutesByPath interface

declare module "@tanstack/react-router" {
    interface FileRoutesByPath {
        "/": {
            id: "/"
            path: "/"
            fullPath: "/"
            preLoaderRoute: typeof IndexImport
            parentRoute: typeof rootRoute
        }
        "/story/$storyID": {
            id: "/story/$storyID"
            path: "/story/$storyID"
            fullPath: "/story/$storyID"
            preLoaderRoute: typeof StoryStoryIDImport
            parentRoute: typeof rootRoute
        }
    }
}

// Create and export the route tree

export interface FileRoutesByFullPath {
    "/": typeof IndexRoute
    "/story/$storyID": typeof StoryStoryIDRoute
}

export interface FileRoutesByTo {
    "/": typeof IndexRoute
    "/story/$storyID": typeof StoryStoryIDRoute
}

export interface FileRoutesById {
    __root__: typeof rootRoute
    "/": typeof IndexRoute
    "/story/$storyID": typeof StoryStoryIDRoute
}

export interface FileRouteTypes {
    fileRoutesByFullPath: FileRoutesByFullPath
    fullPaths: "/" | "/story/$storyID"
    fileRoutesByTo: FileRoutesByTo
    to: "/" | "/story/$storyID"
    id: "__root__" | "/" | "/story/$storyID"
    fileRoutesById: FileRoutesById
}

export interface RootRouteChildren {
    IndexRoute: typeof IndexRoute
    StoryStoryIDRoute: typeof StoryStoryIDRoute
}

const rootRouteChildren: RootRouteChildren = {
    IndexRoute: IndexRoute,
    StoryStoryIDRoute: StoryStoryIDRoute
}

export const routeTree = rootRoute
    ._addFileChildren(rootRouteChildren)
    ._addFileTypes<FileRouteTypes>()

/* ROUTE_MANIFEST_START
{
  "routes": {
    "__root__": {
      "filePath": "__root.tsx",
      "children": [
        "/",
        "/story/$storyID"
      ]
    },
    "/": {
      "filePath": "index.tsx"
    },
    "/story/$storyID": {
      "filePath": "story.$storyID.tsx"
    }
  }
}
ROUTE_MANIFEST_END */
